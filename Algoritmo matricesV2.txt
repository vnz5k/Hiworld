#include <iostream>
#include <vector>
#include <string>
#include <cctype>

bool esNumero(const std::string& s) {
    for (const char &c : s) {
        if (!isdigit(c)) {
            return false;
        }
    }
    return true;
}

std::vector<std::vector<int>> matrizMagicaImpar(int numero) {
    std::vector<std::vector<int>> matriz_magica(numero, std::vector<int>(numero, 0));
    int fila = numero / 2;
    int columna = numero - 1;

    for (int num = 1; num <= numero * numero;) {
        if (fila == -1 && columna == numero) {
            fila = 0;
            columna = numero - 2;
        } else {
            if (columna == numero) {
                columna = 0;
            }
            if (fila < 0) {
                fila = numero - 1;
            }
        }
        if (matriz_magica[fila][columna] != 0) {
            columna -= 2;
            fila++;
            continue;
        } else {
            matriz_magica[fila][columna] = num++;
        }
        fila--;
        columna++;
    }

    return matriz_magica;
}

std::vector<std::vector<int>> matrizMagicaPar(int numero) {
    std::vector<std::vector<int>> matriz_magica(numero, std::vector<int>(numero, 0));

    if (numero % 4 == 0) {
        int k = 1;
        int inv = numero * numero;

        for (int i = 0; i < numero; i++) {
            for (int j = 0; j < numero; j++) {
                if (((i % 4) / 2) == ((j % 4) / 2)) {
                    matriz_magica[i][j] = k;
                } else {
                    matriz_magica[i][j] = inv;
                }
                k++;
                inv--;
            }
        }
    } else {
        std::cout << "Advertencia: La matriz generada no será una matriz mágica cuadrada perfecta" << std::endl;
        int n = numero / 2;
        std::vector<std::vector<int>> submatriz = matrizMagicaImpar(n);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matriz_magica[i][j] = submatriz[i][j];
                matriz_magica[i + n][j + n] = submatriz[i][j] + n * n;
            }
        }
    }

    return matriz_magica;
}

int main() {
    std::string input;
    int numero;
    bool es_valido = false;

    while (!es_valido) {
        std::cout << "Por favor, ingrese un número mayor a 2: ";
        std::cin >> input;
        if (esNumero(input)) {
            numero = std::stoi(input);
            if (numero > 2) {
                es_valido = true;
            } else {
                std::cout << "El número ingresado debe ser mayor a 2." << std::endl;
            }
        } else {
            std::cout << "El caracter ingresado no es un número. Intente de nuevo." << std::endl;
        }
    }

    std::vector<std::vector<int>> matriz_magica;

    if (numero % 2 == 1) {
        matriz_magica = matrizMagicaImpar(numero);
    } else {
        matriz_magica = matrizMagicaPar(numero);
    }

    std::cout << "La matriz mágica cuadrada de tamaño " << numero << "x" << numero << " es:" << std::endl;
    for (const auto &fila : matriz_magica) {
        for (const auto &elemento : fila) {
            std::cout << elemento << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}

